spring:
  datasource:
    url: jdbc:mysql://localhost:3306/task_management?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    #    url: ${DATABASE_URL}
    username: taskApp
    password: 12345678
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        #        dialect: org.hibernate.dialect.PostgreSQLDialect
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  #HEROKU CONFIG
  #    database: postgresql
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 1005341210495-ff6sk7er5e4dibb0vptalurue2gsaien.apps.googleusercontent.com
            clientSecret: m-YPsxC-DUqtlntUouS8QGni
            redirectUriTemplate: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 2433073510350081
            clientSecret: e89405bc6a3e56a621b31ad66d5cb3d3
            redirectUriTemplate: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 338a53cb7e83a6dc5109
            clientSecret: 371629c398859d2d880a66065295c7b7d9932c48
            redirectUriTemplate: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - https://stoic-neumann-df94d0.netlify.com/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
#HEROKU CONFIG
#server:
server:
  port: 8080
#  port: ${PORT:8080}